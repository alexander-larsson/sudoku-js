"use strict";
var sudoku = require('./sudoku.js');

var printSudokuGrid = function(grid) {
    console.log("-------------------------");
    for (var i = 0; i < grid.length; i++) {
        var row = grid[i];
        var rowString = "| ";
        for (var j = 0; j < row.length; j++) {
            var cell = row[j];
            rowString += (cell + " ");
            if ((j + 1) % 3 === 0) {
                rowString += "| ";
            }
        }
        console.log(rowString);
        if ((i + 1) % 3 === 0) {
            console.log("-------------------------");
        }
    }
}

// Impossible to solve example
var x = [ [ 4, 0, 0, 0, 0, 0, 0, 6, 0 ],
          [ 0, 0, 0, 0, 7, 0, 0, 3, 0 ],
          [ 0, 0, 0, 0, 3, 0, 0, 0, 0 ],
          [ 0, 0, 0, 0, 0, 0, 5, 0, 0 ],
          [ 0, 8, 1, 0, 0, 7, 2, 0, 0 ],
          [ 0, 0, 7, 0, 0, 0, 0, 0, 0 ],
          [ 0, 0, 2, 0, 0, 0, 0, 0, 3 ],
          [ 0, 0, 0, 0, 0, 4, 0, 0, 0 ],
          [ 0, 1, 0, 0, 0, 0, 7, 0, 6 ] ];

var generated = [ [ 0, 5, 0, 0, 9, 0, 1, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 6, 0, 0, 0, 0, 5, 0 ],
  [ 0, 0, 0, 4, 0, 7, 8, 0, 0 ],
  [ 0, 0, 2, 0, 0, 1, 0, 0, 0 ],
  [ 0, 0, 5, 9, 0, 0, 4, 0, 2 ],
  [ 0, 1, 9, 0, 0, 8, 0, 7, 0 ],
  [ 8, 0, 0, 5, 4, 0, 3, 0, 0 ],
  [ 0, 6, 4, 7, 0, 0, 0, 0, 0 ] ];

  var generated2 = [ [ 0, 0, 5, 0, 0, 0, 2, 0, 0 ],
  [ 0, 0, 0, 0, 0, 2, 0, 0, 0 ],
  [ 7, 0, 0, 0, 1, 3, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 5 ],
  [ 0, 0, 8, 6, 0, 0, 0, 0, 0 ],
  [ 0, 3, 0, 0, 0, 4, 7, 0, 0 ],
  [ 0, 6, 0, 0, 3, 0, 0, 7, 0 ],
  [ 9, 7, 0, 0, 5, 0, 8, 0, 1 ],
  [ 0, 0, 0, 1, 8, 0, 0, 2, 0 ] ];

  var generated3 = [ [ 9, 0, 0, 0, 8, 0, 0, 7, 0 ],
  [ 0, 1, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 7, 4, 0, 2, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 3, 0, 6 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 1, 0, 9, 3, 7, 0, 4 ],
  [ 0, 0, 0, 0, 0, 1, 0, 9, 0 ],
  [ 8, 0, 6, 0, 0, 0, 4, 0, 1 ],
  [ 0, 5, 0, 6, 0, 8, 0, 3, 0 ] ]

  var generated4 = [ [ 8, 0, 0, 2, 3, 0, 0, 0, 0 ],
  [ 0, 0, 9, 0, 0, 0, 7, 0, 0 ],
  [ 0, 6, 0, 0, 0, 0, 4, 0, 2 ],
  [ 0, 2, 0, 0, 0, 0, 0, 0, 3 ],
  [ 0, 8, 0, 0, 2, 7, 0, 0, 0 ],
  [ 3, 0, 0, 0, 0, 0, 0, 9, 0 ],
  [ 0, 5, 0, 7, 0, 0, 9, 4, 0 ],
  [ 6, 0, 0, 0, 4, 0, 0, 0, 0 ],
  [ 7, 3, 0, 9, 0, 5, 0, 0, 0 ] ]

  var generated5 = [ [ 8, 0, 0, 2, 3, 0, 0, 0, 0 ],
  [ 0, 0, 9, 0, 0, 0, 7, 0, 0 ],
  [ 0, 6, 0, 0, 0, 0, 4, 0, 2 ],
  [ 0, 2, 0, 0, 0, 0, 0, 0, 3 ],
  [ 0, 8, 0, 0, 2, 7, 0, 0, 0 ],
  [ 3, 0, 0, 0, 0, 0, 0, 9, 0 ],
  [ 0, 5, 0, 7, 0, 0, 9, 4, 0 ],
  [ 6, 0, 0, 0, 4, 0, 0, 0, 0 ],
  [ 7, 3, 0, 9, 0, 5, 0, 0, 0 ] ]

//var res = sudoku.solveAndVerifyUniqueSolution(generated5);
//console.log(res.difficulty);

var generatedSudoku = sudoku.generate();
printSudokuGrid(generatedSudoku);
